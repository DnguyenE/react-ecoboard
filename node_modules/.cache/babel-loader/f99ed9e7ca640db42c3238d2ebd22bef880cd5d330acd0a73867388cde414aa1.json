{"ast":null,"code":"var _jsxFileName = \"/Users/pika/react-ecoboard/react-ecoboard/src/Components/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Dashboard.css\";\nimport Sidebar from './Sidebar';\nimport SensorChart from './SensorChart';\nimport MetricCard from './MetricCard';\nimport { FiThermometer, FiDroplet, FiWind } from 'react-icons/fi';\nimport { BsSun, BsMoon } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Update time every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Simulate loading\n    const loadingTimer = setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n      clearTimeout(loadingTimer);\n    };\n  }, []);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n    document.documentElement.classList.toggle('dark', !darkMode);\n  };\n\n  // Sample data - replace with real data\n  const metrics = [{\n    title: 'Temperature',\n    value: '24.5',\n    unit: '°C',\n    icon: /*#__PURE__*/_jsxDEV(FiThermometer, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this),\n    trend: 'up',\n    trendValue: '2.3% from last hour'\n  }, {\n    title: 'Humidity',\n    value: '45',\n    unit: '%',\n    icon: /*#__PURE__*/_jsxDEV(FiDroplet, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this),\n    trend: 'down',\n    trendValue: '1.2% from last hour'\n  }, {\n    title: 'Air Quality',\n    value: '32',\n    unit: 'AQI',\n    icon: /*#__PURE__*/_jsxDEV(FiWind, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this),\n    trend: 'neutral',\n    trendValue: 'Stable'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Environmental Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-slate-400 text-sm\",\n            children: currentTime.toLocaleDateString('en-US', {\n              weekday: 'long',\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-toggle\",\n          \"aria-label\": \"Toggle dark mode\",\n          children: darkMode ? /*#__PURE__*/_jsxDEV(BsSun, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(BsMoon, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading dashboard data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-grid\",\n          children: metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(MetricCard, {\n            ...metric\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(SensorChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"kfuSeJwCtbyXDbjqQfHv7yWcBno=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SensorChart","MetricCard","FiThermometer","FiDroplet","FiWind","BsSun","BsMoon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","darkMode","setDarkMode","currentTime","setCurrentTime","Date","isLoading","setIsLoading","timer","setInterval","loadingTimer","setTimeout","clearInterval","clearTimeout","toggleTheme","document","documentElement","classList","toggle","metrics","title","value","unit","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","trend","trendValue","className","children","toLocaleDateString","weekday","year","month","day","onClick","map","metric","index","_c","$RefreshReg$"],"sources":["/Users/pika/react-ecoboard/react-ecoboard/src/Components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Dashboard.css\";\nimport Sidebar from './Sidebar';\nimport SensorChart from './SensorChart';\nimport MetricCard from './MetricCard';\nimport { FiThermometer, FiDroplet, FiWind } from 'react-icons/fi';\nimport { BsSun, BsMoon } from 'react-icons/bs';\n\nfunction Dashboard() {\n  const [darkMode, setDarkMode] = useState(true);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Update time every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    \n    // Simulate loading\n    const loadingTimer = setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      clearTimeout(loadingTimer);\n    };\n  }, []);\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n    document.documentElement.classList.toggle('dark', !darkMode);\n  };\n\n  // Sample data - replace with real data\n  const metrics = [\n    {\n      title: 'Temperature',\n      value: '24.5',\n      unit: '°C',\n      icon: <FiThermometer size={24} />,\n      trend: 'up' as const,\n      trendValue: '2.3% from last hour'\n    },\n    {\n      title: 'Humidity',\n      value: '45',\n      unit: '%',\n      icon: <FiDroplet size={24} />,\n      trend: 'down' as const,\n      trendValue: '1.2% from last hour'\n    },\n    {\n      title: 'Air Quality',\n      value: '32',\n      unit: 'AQI',\n      icon: <FiWind size={24} />,\n      trend: 'neutral' as const,\n      trendValue: 'Stable'\n    }\n  ];\n\n  return (\n    <div className={`dashboard ${darkMode ? 'dark' : 'light'}`}>\n      <Sidebar />\n      <div className=\"main-content\">\n        <header className=\"dashboard-header\">\n          <div>\n            <h1>Environmental Dashboard</h1>\n            <p className=\"text-slate-400 text-sm\">\n              {currentTime.toLocaleDateString('en-US', { \n                weekday: 'long', \n                year: 'numeric', \n                month: 'long', \n                day: 'numeric' \n              })}\n            </p>\n          </div>\n          <button \n            onClick={toggleTheme}\n            className=\"theme-toggle\"\n            aria-label=\"Toggle dark mode\"\n          >\n            {darkMode ? <BsSun size={20} /> : <BsMoon size={20} />}\n          </button>\n        </header>\n\n        {isLoading ? (\n          <div className=\"loading-state\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading dashboard data...</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"metrics-grid\">\n              {metrics.map((metric, index) => (\n                <MetricCard key={index} {...metric} />\n              ))}\n            </div>\n            \n            <div className=\"chart-container\">\n              <SensorChart />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}