{"ast":null,"code":"export const SimulateRealTimeData = (sensorCount, interval,\n// in milliseconds\nonUpdate) => {\n  const generateMetrics = sensorId => ({\n    sensorId: sensorId,\n    timestamp: new Date().toISOString(),\n    airQuality: +(Math.random() * 200).toFixed(2),\n    // 0-200 AQI (Good to Moderate)\n    temperature: +(10 + Math.random() * 30).toFixed(2),\n    // 10-40°C\n    humidity: +(30 + Math.random() * 60).toFixed(2) // 30-90% RH\n  });\n  const intervalId = setInterval(() => {\n    const updates = Array.from({\n      length: sensorCount\n    }, (_, i) => generateMetrics(`Sensor-${i + 1}`));\n    onUpdate(updates);\n  }, interval);\n  return () => clearInterval(intervalId);\n};\n_c = SimulateRealTimeData;\nexport default SimulateRealTimeData;\nvar _c;\n$RefreshReg$(_c, \"SimulateRealTimeData\");","map":{"version":3,"names":["SimulateRealTimeData","sensorCount","interval","onUpdate","generateMetrics","sensorId","timestamp","Date","toISOString","airQuality","Math","random","toFixed","temperature","humidity","intervalId","setInterval","updates","Array","from","length","_","i","clearInterval","_c","$RefreshReg$"],"sources":["/Users/pika/react-ecoboard/src/Components/SimulateRealTimeData.tsx"],"sourcesContent":["export const SimulateRealTimeData = (\n  sensorCount,\n  interval,  // in milliseconds\n  onUpdate\n) => {\n  const generateMetrics = (sensorId) => ({\n    sensorId: sensorId,\n    timestamp: new Date().toISOString(),\n    airQuality: +(Math.random() * 200).toFixed(2), // 0-200 AQI (Good to Moderate)\n    temperature: +(10 + Math.random() * 30).toFixed(2), // 10-40°C\n    humidity: +(30 + Math.random() * 60).toFixed(2), // 30-90% RH\n  });\n\n  const intervalId = setInterval(() => {\n      const updates = Array.from({ length: sensorCount }, (_, i) =>\n      generateMetrics(`Sensor-${i + 1}`)\n    );\n    onUpdate(updates);\n  }, interval);\n\n  return () => clearInterval(intervalId);\n};\n\nexport default SimulateRealTimeData;\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAClCC,WAAW,EACXC,QAAQ;AAAG;AACXC,QAAQ,KACL;EACH,MAAMC,eAAe,GAAIC,QAAQ,KAAM;IACrCA,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCC,UAAU,EAAE,CAAC,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;IAAE;IAC/CC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;IAAE;IACpDE,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAE;EACnD,CAAC,CAAC;EAEF,MAAMG,UAAU,GAAGC,WAAW,CAAC,MAAM;IACjC,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEnB;IAAY,CAAC,EAAE,CAACoB,CAAC,EAAEC,CAAC,KACzDlB,eAAe,CAAC,UAAUkB,CAAC,GAAG,CAAC,EAAE,CACnC,CAAC;IACDnB,QAAQ,CAACc,OAAO,CAAC;EACnB,CAAC,EAAEf,QAAQ,CAAC;EAEZ,OAAO,MAAMqB,aAAa,CAACR,UAAU,CAAC;AACxC,CAAC;AAACS,EAAA,GArBWxB,oBAAoB;AAuBjC,eAAeA,oBAAoB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}