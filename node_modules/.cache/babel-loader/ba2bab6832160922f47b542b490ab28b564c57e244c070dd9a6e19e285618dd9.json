{"ast":null,"code":"export const SimulateRealTimeData=(sensorCount,interval,// in milliseconds\nonUpdate)=>{const generateMetrics=sensorId=>({sensorId:sensorId,timestamp:new Date().toISOString(),airQuality:+(Math.random()*200).toFixed(2),// 0-200 AQI (Good to Moderate)\ntemperature:+(10+Math.random()*30).toFixed(2),// 10-40°C\nhumidity:+(30+Math.random()*60).toFixed(2)// 30-90% RH\n});const intervalId=setInterval(()=>{const updates=Array.from({length:sensorCount},(_,i)=>generateMetrics(\"Sensor-\".concat(i+1)));onUpdate(updates);},interval);return()=>clearInterval(intervalId);};export default SimulateRealTimeData;","map":{"version":3,"names":["SimulateRealTimeData","sensorCount","interval","onUpdate","generateMetrics","sensorId","timestamp","Date","toISOString","airQuality","Math","random","toFixed","temperature","humidity","intervalId","setInterval","updates","Array","from","length","_","i","concat","clearInterval"],"sources":["/Users/pika/react-ecoboard/src/Components/SimulateRealTimeData.tsx"],"sourcesContent":["export const SimulateRealTimeData = (\n  sensorCount,\n  interval,  // in milliseconds\n  onUpdate\n) => {\n  const generateMetrics = (sensorId) => ({\n    sensorId: sensorId,\n    timestamp: new Date().toISOString(),\n    airQuality: +(Math.random() * 200).toFixed(2), // 0-200 AQI (Good to Moderate)\n    temperature: +(10 + Math.random() * 30).toFixed(2), // 10-40°C\n    humidity: +(30 + Math.random() * 60).toFixed(2), // 30-90% RH\n  });\n\n  const intervalId = setInterval(() => {\n      const updates = Array.from({ length: sensorCount }, (_, i) =>\n      generateMetrics(`Sensor-${i + 1}`)\n    );\n    onUpdate(updates);\n  }, interval);\n\n  return () => clearInterval(intervalId);\n};\n\nexport default SimulateRealTimeData;\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,oBAAoB,CAAGA,CAClCC,WAAW,CACXC,QAAQ,CAAG;AACXC,QAAQ,GACL,CACH,KAAM,CAAAC,eAAe,CAAIC,QAAQ,GAAM,CACrCA,QAAQ,CAAEA,QAAQ,CAClBC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCC,UAAU,CAAE,CAAC,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAE;AAC/CC,WAAW,CAAE,CAAC,CAAC,EAAE,CAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAE;AACpDE,QAAQ,CAAE,CAAC,CAAC,EAAE,CAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAG;AACnD,CAAC,CAAC,CAEF,KAAM,CAAAG,UAAU,CAAGC,WAAW,CAAC,IAAM,CACjC,KAAM,CAAAC,OAAO,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAEnB,WAAY,CAAC,CAAE,CAACoB,CAAC,CAAEC,CAAC,GACzDlB,eAAe,WAAAmB,MAAA,CAAWD,CAAC,CAAG,CAAC,CAAE,CACnC,CAAC,CACDnB,QAAQ,CAACc,OAAO,CAAC,CACnB,CAAC,CAAEf,QAAQ,CAAC,CAEZ,MAAO,IAAMsB,aAAa,CAACT,UAAU,CAAC,CACxC,CAAC,CAED,cAAe,CAAAf,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}